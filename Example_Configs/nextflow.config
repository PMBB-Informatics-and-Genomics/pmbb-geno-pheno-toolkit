// This is where you may include pipeline-specific configurations which you make
// They should be relative to wherever this nextflow.config file is
// includeConfig 'pipeline.config'
// you can find example configuration files in the READMEs and the Example_Configs folder

profiles {
    non_docker_local {
        // run locally without docker
        process.executor = awsbatch-or-lsf-or-slurm-etc
    }

    cluster_singularity {
        // run on computing cluster
        // CHANGE EVERY TIME!
        process.executor = awsbatch-or-lsf-or-slurm-etc
        process.queue = 'add your queue name here'

        singularity.enabled = true
    	process.container = 'this will be the path to the .sif file you build'
        singularity.runOptions = '-B /root/,/directory/,/names/'

        executor {
            queueSize=500 // we do this so nextflow is allowed to manage more jobs at a time
        }

        process.memory = '15GB' // this is a solid default memory request - adapt to your needs
    }

    all_of_us_gcr {
        // CHANGE EVERY TIME! These are specific for each user, see docs
        google.project = terra project id
        google.lifeSciences.serviceAccountEmail = service@email.gservicaaccount.com
        workDir = /path/to/workdir/ // can be gs://

        // You'll have to change this container to correspond with whichever pipeline you're using
        process.container = 'gcr.io/verma-pmbb-codeworks-psom-bf87/{CONTAINER}:latest'

        // these are AoU, GCR parameters that we recommend not changing
        process.memory = '15GB' // minimum memory per process (static)
        process.executor = awsbatch-or-lsf-or-slurm-etc
        google.zone = "us-central1-a" // AoU uses central time zone (static)
        google.location = "us-central1"
        google.lifeSciences.debug = true
        google.lifeSciences.network = "network"
        google.lifeSciences.subnetwork = "subnetwork"
        google.lifeSciences.usePrivateAddress = false
        google.lifeSciences.copyImage = "gcr.io/google.com/cloudsdktool/cloud-sdk:alpine"
        google.enableRequesterPaysBuckets = true
    }
}
